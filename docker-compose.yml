version: '3.8'

services:
  mongodb:
    image: mongo:6.0
    container_name: stock_mongodb
    restart: always
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: stockprediction
    volumes:
      - mongodb_data:/data/db
    networks:
      - stock_network

  redis:
    image: redis:7.0-alpine
    container_name: stock_redis
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - stock_network

  airflow-webserver:
    build:
      context: ./airflow
      dockerfile: Dockerfile
    container_name: stock_airflow_webserver
    restart: always
    depends_on:
      - mongodb
      - redis
    environment:
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=sqlite:////opt/airflow/airflow.db
      - AIRFLOW__CORE__FERNET_KEY=your-fernet-key-here
      - AIRFLOW__WEBSERVER__SECRET_KEY=your-secret-key-here
    ports:
      - "8080:8080"
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./airflow/logs:/opt/airflow/logs
      - ./airflow/plugins:/opt/airflow/plugins
    networks:
      - stock_network

  flask-api:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: stock_flask_api
    restart: always
    ports:
      - "5000:5000"
    environment:
      - MONGO_URI=mongodb://root:password123@mongodb:27017/stockprediction?authSource=admin
      - REDIS_URL=redis://redis:6379
      - FLASK_ENV=development
    depends_on:
      - mongodb
      - redis
    volumes:
      - ./backend:/app
      - ./ml_models:/app/ml_models
    networks:
      - stock_network

  react-frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: stock_react_frontend
    restart: always
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_URL=http://localhost:5000
      - REACT_APP_WS_URL=http://localhost:5000
    depends_on:
      - flask-api
    networks:
      - stock_network

  prometheus:
    image: prom/prometheus:latest
    container_name: stock_prometheus
    restart: always
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    networks:
      - stock_network

  grafana:
    image: grafana/grafana:latest
    container_name: stock_grafana
    restart: always
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin123
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources
    networks:
      - stock_network

volumes:
  mongodb_data:
  redis_data:
  prometheus_data:
  grafana_data:

networks:
  stock_network:
    driver: bridge
